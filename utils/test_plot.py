# https://sabopy.com/py/matplotlib-79/

import numpy as np
import matplotlib.pyplot as plt
from mpl_toolkits.axes_grid1.inset_locator import inset_axes

data1 = torch.tensor(
        [[ 0.0312, -0.0625, -0.1875, -0.0625,  0.0312, -0.0000],
         [-0.0625,  0.1250,  0.3750,  0.1250, -0.0625,  0.0000],
         [-0.1875,  0.3750,  1.1250,  0.3750, -0.1875,  0.0000],
         [-0.0625,  0.1250,  0.3750,  0.1250, -0.0625,  0.0000],
         [ 0.0312, -0.0625, -0.1875, -0.0625,  0.0312, -0.0000],
         [-0.0000,  0.0000,  0.0000,  0.0000, -0.0000,  0.0000]])

data2 = torch.tensor(
        [[-0.0000,  0.0000,  0.0000,  0.0000, -0.0000,  0.0000],
         [ 0.0000, -0.0000, -0.0000, -0.0000,  0.0000, -0.0000],
         [-0.0625,  0.1250,  0.3750,  0.1250, -0.0625,  0.0000],
         [ 0.1250, -0.2500, -0.7500, -0.2500,  0.1250, -0.0000],
         [-0.0625,  0.1250,  0.3750,  0.1250, -0.0625,  0.0000],
         [ 0.0000, -0.0000, -0.0000, -0.0000,  0.0000, -0.0000]])

data3 = torch.tensor(
        [[-0.0000,  0.0000, -0.0625,  0.1250, -0.0625,  0.0000],
         [ 0.0000, -0.0000,  0.1250, -0.2500,  0.1250, -0.0000],
         [ 0.0000, -0.0000,  0.3750, -0.7500,  0.3750, -0.0000],
         [ 0.0000, -0.0000,  0.1250, -0.2500,  0.1250, -0.0000],
         [-0.0000,  0.0000, -0.0625,  0.1250, -0.0625,  0.0000],
         [ 0.0000, -0.0000,  0.0000, -0.0000,  0.0000, -0.0000]])
         
data4 = torch.tensor(
        [[ 0.0000, -0.0000,  0.0000, -0.0000,  0.0000, -0.0000],
         [-0.0000,  0.0000, -0.0000,  0.0000, -0.0000,  0.0000],
         [ 0.0000, -0.0000,  0.1250, -0.2500,  0.1250, -0.0000],
         [-0.0000,  0.0000, -0.2500,  0.5000, -0.2500,  0.0000],
         [ 0.0000, -0.0000,  0.1250, -0.2500,  0.1250, -0.0000],
         [-0.0000,  0.0000, -0.0000,  0.0000, -0.0000,  0.0000]])
        
print(data1.shape)

fig, (ax) = plt.subplots(1, 1, figsize=[8, 8])

im = ax.imshow(data1,cmap='Spectral',vmin=0,vmax=1)

#fig.colorbar(im, cax=axins1,ticks=[0.5])
#axins1.yaxis.set_ticks_position("left")

plt.subplots_adjust(hspace=0.275)
plt.savefig('data1.png',dpi=100)
plt.show()


def show_filter(data):
    fig, (ax) = plt.subplots(1, 1, figsize=[8, 8])
    im = ax.imshow(data,cmap='Spectral',vmin=0,vmax=1)
    plt.subplots_adjust(hspace=0.275)
    #plt.savefig('inset_cbar.png',dpi=100)
    plt.show()    
    
show_filter(data2)    
show_filter(data3)    
show_filter(data4)    